//
// Variables, Functions, and Mixins
//

// Dependencies
@use 'config/tokens' as *;
@use 'config/dimensions';

$sizes: map-get($tokens, 'iconSize');

// Declarations
@mixin selector() {
  svg[class*='icon'] {
    @content;
  }
}

@mixin base() {
  overflow: visible !important;
  max-width: 100%;
  width: nth(map-get($sizes, 'default'), 1);
  height: nth(map-get($sizes, 'default'), 2);
}

@mixin sizes($variant: '') {
  @each $key, $var in $sizes {
    .#{$variant}icon-#{$key} {
      width: nth($var, 1) !important;
      height: nth($var, 2) !important;
    }
  }
}

@mixin spacing() {
  > [class*='icon'] {
    width: 1rem;
    height: 1rem
  }

  > [class*='icon']:first-child {
    margin-inline-end: calc(var(--nyco-grid) * 0.75);
  }

  > [class*='icon']:last-child {
    margin-inline-start: calc(var(--nyco-grid) * 0.75);
  }
}

@mixin ui {
  [class*='icon-ui'] {
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;

    circle {
      fill: currentColor;
    }
  }
}
